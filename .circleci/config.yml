version: 2

jobs:
  build:
    docker:
    - image: circleci/php:7.1-node-browsers
    - image: circleci/mysql:5.7
      environment:
        MYSQL_ROOT_PASSWORD: password
        MYSQL_DATABASE: wc_gateway_moneybutton_test
    working_directory: ~/wc-gateway-moneybutton
    steps: # a set of executable commands
    - checkout # special step to check out source code to working directory
    - run:
        name: Waiting for MySQL to be ready
        command: |
          for i in `seq 1 10`;
          do
            nc -z 127.0.0.1 3306 && echo Success && exit 0
            echo -n .
            sleep 1
          done
          echo Failed waiting for MySQL && exit 1
    - run:
        name: Install Dependencies
        command: |
          sudo docker-php-ext-install zip mysqli &&
          sudo apt-get install mysql-client &&
          sudo composer self-update
    - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
        keys:
        - composer-v1-{{ checksum "composer.json" }}
        # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
        - composer-v1-
    - run:
        name: PHP Dependencies (composer install)
        command: composer install -n --prefer-dist
    - save_cache: # special step to save the dependency cache with the `composer.lock` cache key template
        key: composer-v1-{{ checksum "composer.json" }}
        paths:
        - vendor
    - restore_cache: # special step to restore the dependency cache if `package.json` does not change
        keys:
        - node-v1-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
        - node-v1-
    - run:
        name: NODE Dependencies (npm install)
        command: npm install
    - save_cache: # special step to save the dependency cache with the `package.json` cache key template
        key: node-v1-{{ checksum "package.json" }}
        paths:
        - node_modules
    - run:
        name: Unit Tests
        command: ./vendor/bin/phpunit -c src/test/phpunit.xml --log-junit test-results/junit/unit-tests.xml
    - run:
        name: Integration Tests
        command: ./vendor/bin/phpunit -c src/integration-test/phpunit.xml --log-junit test-results/junit/int-tests.xml
    - store_test_results:
        path: test-results/
    - store_artifacts:
        path: test-results/
    - run:
        name: Package
        command: |
          npm run package-release &&
          mkdir -p /tmp/workspace/artifacts &&
          mv ./target/wc-gateway-moneybutton.zip /tmp/workspace/artifacts/wc-gateway-moneybutton-${CIRCLE_SHA1}.zip
    - store_artifacts:
        path: /tmp/workspace/artifacts
        destination: artifacts
    - persist_to_workspace:
        root: /tmp/workspace
        paths:
        - artifacts
    # See https://circleci.com/docs/2.0/deployment-integrations/ for deploy examples

  release:
    docker:
    - image: circleci/php:7.1-node-browsers
    working_directory: ~/wc-gateway-moneybutton
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - checkout
    - restore_cache: # special step to restore the dependency cache if `composer.lock` does not change
        keys:
        - composer-v1-{{ checksum "composer.json" }}
        # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
        - composer-v1-
    - run:
        name: PHP Dependencies (composer install)
        command: composer install -n --prefer-dist
    - restore_cache: # special step to restore the dependency cache if `package.json` does not change
        keys:
        - node-v1-{{ checksum "package.json" }}
        # fallback to using the latest cache if no exact match is found (See https://circleci.com/docs/2.0/caching/)
        - node-v1-
    - run:
        name: Package File with Version
        command: |
          RELEASE_FILE=/tmp/workspace/artifacts/wc-gateway-moneybutton-${CIRCLE_TAG}.zip
          mv /tmp/workspace/artifacts/wc-gateway-moneybutton-${CIRCLE_SHA1}.zip ${RELEASE_FILE}
    - run:
        name: Make GitHub release
        command: |
          echo 'export  RELEASE_FILE=/tmp/workspace/artifacts/wc-gateway-moneybutton-${CIRCLE_TAG}.zip' >> $BASH_ENV
          source $BASH_ENV
          node bin/github-release.js
    - store_artifacts:
        path: /tmp/workspace/artifacts
        destination: artifacts



workflows:
  version: 2
  build-and-release:
    jobs:
    - build:
        filters:
          tags:
            only: /^v[0-9]\.[0-9]\.[0-9](?:$|-(?:dev|alpha|beta|rc)\.\d*$)/
          branches:
            only:
            - master
            - develop
            - /^release\/.*/
            - /^feature\/.*/
            - /^bugfix\/.*/
            - /^hotfix\/.*/
    - hold:
        type: approval
        requires:
          - build
        filters:
          tags:
            only:  /^v[0-9]\.[0-9]\.[0-9](?:$|-(?:dev|alpha|beta|rc)\.\d*$)/
          branches:
            ignore: /.*/
    - release:
        requires:
          - hold
        filters:
          tags:
            only: /^v[0-9]\.[0-9]\.[0-9](?:$|-(?:dev|alpha|beta|rc)\.\d*$)/
          branches:
            ignore: /.*/

